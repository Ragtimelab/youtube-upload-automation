[project]
name = "youtube-upload-automation"
version = "1.0.0"
description = "YouTube 업로드 자동화 시스템 - 1인 개발자를 위한 콘텐츠 제작 완전 자동화 솔루션"
authors = [
    {name = "Ragtime Lab", email = "ragtime1260@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.0",
    "uvicorn[standard]>=0.35.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "python-multipart>=0.0.20",
    "websockets>=15.0.0",
    "google-auth>=2.25.2",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.179.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.10.1",
    "click>=8.2.1",
    "rich>=14.1.0",
    "requests>=2.32.4",
    "pyyaml>=6.0.0",
    "gradio>=5.43.1",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Video",
]

[project.urls]
Homepage = "https://github.com/ragtime1260/youtube-upload-automation"
Repository = "https://github.com/ragtime1260/youtube-upload-automation"
Documentation = "https://github.com/ragtime1260/youtube-upload-automation#readme"
"Bug Tracker" = "https://github.com/ragtime1260/youtube-upload-automation/issues"

[tool.poetry]
packages = [{include = "app", from = "backend"}]

[tool.poetry.dependencies]
python = "^3.13"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.1.0", 
    "httpx>=0.28.0",
    "black>=25.0.0",
    "isort>=6.0.0",
    "flake8>=7.0.0",
    "mypy>=1.6.0",
    "pre-commit>=4.3.0",
    "autoflake>=2.3.1",
    "types-pyyaml>=6.0.12.20250809",
]
test = [
    "coverage>=7.3.0",
    "pytest-cov>=6.2.0",
    "factory-boy>=3.3.0",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(

# directories

  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "backend/tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["backend/app"]
omit = [
    "*/tests/*",
    "*/alembic/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
